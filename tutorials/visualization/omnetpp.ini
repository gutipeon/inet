[General]
tkenv-plugin-path = ../../../etc/plugins
debug-on-errors = true
record-eventlog = true


[Config Visualization01]
description = Showing Boston downtown
network = VisualizationA

# coordinate system parameters
*.coordinateSystem.playgroundLongitude = -71.070421deg
*.coordinateSystem.playgroundLatitude = 42.357824deg
*.coordinateSystem.playgroundAltitude = 0.1m
*.coordinateSystem.playgroundHeading = 68.3deg

# scene visualizer parameters
*.visualizer.osgVisualizer.sceneVisualizerType = "SceneOsgEarthVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.mapFile = "boston.earth"
*.visualizer.osgVisualizer.sceneVisualizer.playgroundShading = false
*.visualizer.osgVisualizer.sceneVisualizer.playgroundColor = "#000000"
*.visualizer.osgVisualizer.sceneVisualizer.playgroundOpacity = 0.1
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 100m


#[Config Visualization02]	#dependency
#extends = Visualization01
#description = Adding static 3D objects to the scene
#########################


[Config Visualization03]
extends = Visualization01		#TODO: if Visualization02 became active change Visualization01 to Visualization02
description = Displaying communication & interference range
network = VisualizationB

# wlan parameters
*.accessPoint0.wlan[*].radio.transmitter.power = 1mW
*.pedestrian*.wlan[*].radio.transmitter.power = 0.7mW

# medium visualizer parameters
*.visualizer.*.mediumVisualizer.displayCommunicationRanges = true
*.visualizer.*.mediumVisualizer.displayInterferenceRanges = true


[Config Visualization04]
extends = Visualization03
description = Using 3D models for network nodes

# osgModel visualizer parameters
*.pedestrian0.osgModel = "boxman.osgb.(0.06).scale.0,0,90.rot" # external 3D animated osg model, I stole from "inet/examples/visualization/networknode/" folder
*.pedestrian1.osgModel = "boxman.osgb.(0.06).scale.0,0,90.rot"


[Config Visualization05]
extends = Visualization04
description = Displaying recent movement

# common mobility parameters
*.**.mobility.initFromDisplayString = false

# pedestrians common initial parameters
*.pedestrian*.mobilityType = "MassMobility"
*.pedestrian*.mobility.initialZ = 0.5m
*.pedestrian*.mobility.constraintAreaMinZ = 0m
*.pedestrian*.mobility.constraintAreaMaxZ = 1m
*.pedestrian*.mobility.changeInterval = 0.5s
*.pedestrian*.mobility.changeAngleBy = uniform(-10deg, 10deg)
*.pedestrian*.mobility.speed = 1.3mps

# pedestrian0 mobility parameters
*.pedestrian0.mobility.initialX = 395m
*.pedestrian0.mobility.initialY = 63m
*.pedestrian0.mobility.constraintAreaMinX = 390m
*.pedestrian0.mobility.constraintAreaMinY = 63m
*.pedestrian0.mobility.constraintAreaMaxX = 400m
*.pedestrian0.mobility.constraintAreaMaxY = 230m

# pedestrian1 mobility parameters
*.pedestrian1.mobility.initialX = 600m
*.pedestrian1.mobility.initialY = 90m
*.pedestrian1.mobility.constraintAreaMinX = 595m
*.pedestrian1.mobility.constraintAreaMinY = 90m
*.pedestrian1.mobility.constraintAreaMaxX = 605m
*.pedestrian1.mobility.constraintAreaMaxY = 230m

# accessPoint0 mobility parameters
*.accessPoint0.mobilityType = "StationaryMobility" # default, can be omitted 
*.accessPoint*.mobility.coordinateSystemModule = "coordinateSystem"
*.accessPoint0.mobility.initialZ = 0.5m
*.accessPoint0.mobility.initialLatitude = 42.3542933deg
*.accessPoint0.mobility.initialLongitude = -71.0663985deg

# mobility visualizer parameters
*.visualizer.*.mobilityVisualizer.displayVelocity = true
*.visualizer.*.mobilityVisualizer.displayMovementTrail = true
################
# Review 1


[Config Visualization06]
extends = Visualization05
description = Showing IP addresses

# interface table visualizer parameters
*.visualizer.*.interfaceTableVisualizer.nodeFilter = "*.pedestrian*"
*.visualizer.*.interfaceTableVisualizer.interfaceFilter = "wlan*"


[Config Visualization07]
extends = Visualization06
description = Showing wifi association

# interface table visualizer parameters must turn off, because they're overlapping
*.visualizer.*.interfaceTableVisualizer.nodeFilter = ""

# ieee802.11 visualizer parameters
*.visualizer.*.ieee80211Visualizer.nodeFilter = "**"


[Config Visualization08]
extends = Visualization07
description = Displaying transmissions & receptions

# voip application parameters
*.pedestrian*.numUdpApps = 1

*.pedestrian0.udpApp[0].typename = "SimpleVoIPSender"
*.pedestrian0.udpApp[0].destAddress = "pedestrian1"
*.pedestrian0.udpApp[0].localPort = 5000
*.pedestrian0.udpApp[0].destPort = 5000

*.pedestrian1.udpApp[0].typename = "SimpleVoIPReceiver"
*.pedestrian1.udpApp[0].localPort = 5000


# medium visualizer parameters
*.visualizer.*.mediumVisualizer.displayTransmissions = true
*.visualizer.*.mediumVisualizer.displayReceptions = true
*.visualizer.*.mediumVisualizer.transmissionImage = "transmission.png"
*.visualizer.*.mediumVisualizer.receptionImage = "reception.png"


[Config Visualization09]
extends = Visualization08
description = Showing propagating signals

# medium visualizer parameter
*.visualizer.*.mediumVisualizer.displaySignals = true
*.visualizer.*.mediumVisualizer.signalPropagationUpdateInterval = 25ns
#*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "ring"
#*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "sphere"
*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "both"


[Config Visualization10]
extends = Visualization09
description = Showing active physical links

# turn on physical links
*.visualizer.*.physicalLinkVisualizer.packetNameFilter = "*"


[Config Visualization11]
extends = Visualization10
description = Showing active data links

# turn off physical links
*.visualizer.*.physicalLinkVisualizer.packetNameFilter = ""

# turn on data links
*.visualizer.*.dataLinkVisualizer.packetNameFilter = "*VoIP*"


[Config Visualization12]
extends = Visualization11
description = Displaying throughput statistics

# turn off association info
*.visualizer.*.infoVisualizer.modules = ""

# statistic visualizer parameters
*.visualizer.*.statisticVisualizer.signalName = "VoIPPacketLossRate"
*.visualizer.*.statisticVisualizer.statisticName = "packetLossRate"
*.visualizer.*.statisticVisualizer.prefix = "Packet loss"
*.visualizer.*.statisticVisualizer.unit = "ratio"
*.visualizer.*.statisticVisualizer.sourcePathFilter = "**.udpApp[0]"


#########
[Config Visualization13]
extends = Visualization12
description = Showing routing tables
network = VisualizationC

# add pedestrianVideo
*.pedestrianVideo.wlan[*].radio.transmitter.power = 0.7mW

# initialize pedestrianVideo position
*.pedestrianVideo.mobilityType = "StationaryMobility"
*.pedestrianVideo.mobility.initialX = 468m
*.pedestrianVideo.mobility.initialY = 130m
*.pedestrianVideo.mobility.initialZ = 0.5m

# router0 mobility settings
*.router*.mobilityType = "StationaryMobility"
*.router*.mobility.coordinateSystemModule = "coordinateSystem"
*.router*.mobility.initialZ = 0.5m
*.router0.mobility.initialLatitude = 42.35433deg
*.router0.mobility.initialLongitude = -71.06550deg

#*.switch0.mobilityType = "StationaryMobility"
#*.switch0.mobility.initialX = 416m
#*.switch0.mobility.initialY = 327m

#videoStreamServer mobility settings
*.videoStreamServer.mobilityType = "StationaryMobility"
*.videoStreamServer.mobility.coordinateSystemModule = "coordinateSystem"
*.*Server*.mobility.initialZ = 0.5m
*.videoStreamServer.mobility.initialLatitude = 42.3554005deg
*.videoStreamServer.mobility.initialLongitude = -71.0637636deg

# videoStreamServer application settings
*.videoStreamServer.numUdpApps = 1
*.videoStreamServer.udpApp[0].typename = "UDPVideoStreamSvr"
*.videoStreamServer.udpApp[0].localPort = 4000
*.videoStreamServer.udpApp[0].sendInterval = exponential(1ms)
*.videoStreamServer.udpApp[0].packetLen = 1000B
*.videoStreamServer.udpApp[0].videoSize = 800000000B

# client application parameters
*.pedestrianVideo.numUdpApps = 1
*.pedestrianVideo.udpApp[0].typename = "UDPVideoStreamCli"
*.pedestrianVideo.udpApp[0].localPort = 4000
*.pedestrianVideo.udpApp[0].serverAddress = "videoStreamServer"
*.pedestrianVideo.udpApp[0].serverPort = 4000

# turn off data link visualizer
*.visualizer.*.dataLinkVisualizer.packetNameFilter = ""

# routing table visualizer
#*.visualizer.*.routingTableVisualizer.subscriptionModule = ""
*.visualizer.*.routingTableVisualizer.destinationFilter = "*.pedestrianVideo"


[Config Visualization14]
extends = Visualization13
description = Displaying 802.11 channel access state

# turn off statistic visualizer
*.visualizer.*.statisticVisualizer.signalName = ""
*.visualizer.*.statisticVisualizer.statisticName = ""

# info visualizer parameters
*.visualizer.*.infoVisualizer.modules = "*.*.wlan[0].mac.ctn[0]"
*.visualizer.*.infoVisualizer.content = "displayStringText"


[Config Visualization15]
extends = Visualization14
description = Showing active network routes
network = VisualizationD

# accessPoint1 settings
*.accessPoint1.wlan[*].radio.transmitter.power = 1mW
*.accessPoint1.mobility.initialX = 630m
*.accessPoint1.mobility.initialY = 205m

# router1 mobility settings
*.router1.mobility.initialX = 616m
*.router1.mobility.initialY = 244m

# pedestrian1 mobility parameters. Change because of access points placing
*.pedestrian1.mobility.initialX = 630m
*.pedestrian1.mobility.initialY = 90m
*.pedestrian1.mobility.constraintAreaMinX = 625m
*.pedestrian1.mobility.constraintAreaMinY = 85m
*.pedestrian1.mobility.constraintAreaMaxX = 635m
*.pedestrian1.mobility.constraintAreaMaxY = 230m


#*.visualizer.*.routingTableVisualizer.subscriptionModule = ""
*.visualizer.*.routingTableVisualizer.destinationFilter = ""

# wifi parameters
*.accessPoint0.wlan[0].mgmt.ssid = "inet"
*.accessPoint1.wlan[0].mgmt.ssid = "omnet"
*.pedestrian0.wlan[0].agent.default_ssid = "inet"
*.pedestrianVideo.wlan[0].agent.default_ssid = "inet"
*.pedestrian1.wlan[0].agent.default_ssid = "omnet"

# should showing the difference between dataLink and route
#*.visualizer.*.dataLinkVisualizer.packetNameFilter = "*VoIP*"

# network route visualizer
#*.visualizer.*.routeVisualizer.subscriptionModule = "**"
#*.visualizer.*.routeVisualizer.packetNameFilter = "*VoIP*"


[Config Visualization16]
extends = Visualization15
description = Displaying physical environment
network = VisualizationE

# physical environment parameters
*.physicalEnvironment.coordinateSystemModule = "coordinateSystem"
*.physicalEnvironment.spaceMinX = 0m
*.physicalEnvironment.spaceMinY = 0m
*.physicalEnvironment.spaceMinZ = 0m
*.physicalEnvironment.spaceMaxX = 700m
*.physicalEnvironment.spaceMaxY = 700m
*.physicalEnvironment.spaceMaxZ = 100m
*.physicalEnvironment.config = xmldoc("obstacle.xml")


[Config Visualization17]
extends = Visualization16
description = Displaying obstacle loss

# visualizer parameters
*.visualizer.*.obstacleLossVisualizer.displayIntersectionTrail = true
*.visualizer.*.obstacleLossVisualizer.displayFaceNormalVectorTrail = true


[Config Visualization18]
extends = Visualization17
description = Showing packet drops

# visualizer parameters
*.visualizer.*.packetDropVisualizer.packetNameFilter = "*"


[Config Visualization19]
extends = Visualization18
description = Displaying transport connections
network = VisualizationF

# car appearance
*.car[*].osgModel = "car.osgb.20.scale"
*.car[*].osgModelColor = "#CB4154"

# car wlan communication range parameter
*.car[*].wlan[*].radio.transmitter.power = 0.7mW

# car mobility parameters
*.car[*].mobilityType = "VehicleMobility"
*.car[*].mobility.updateInterval = 100ms
*.car[0].mobility.waypointFile = "waypoint1.txt"
*.car[1].mobility.waypointFile = "waypoint2.txt"
*.car[*].mobility.waypointProximity = 4m
*.car[*].mobility.speed = 12mps

# accessPoint2 mobility
*.accessPoint2.mobility.initialLatitude = 42.357007deg
*.accessPoint2.mobility.initialLongitude = -71.0657737deg

# accessPoint2 wlan
*.accessPoint2.wlan[*].radio.transmitter.power = 1mW

# router2 mobility
*.router2.mobility.initialLatitude = 42.3554667deg
*.router2.mobility.initialLongitude = -71.0664122deg


